<?xml version="1.0" encoding="UTF-8"?>
<sip-app>

	<app-name>com.zczg.app.SipAppP2PApplication</app-name>
	<display-name>com.zczg.app.SipAppP2PApplication</display-name>

	<session-config>
		<session-timeout>0</session-timeout>
	</session-config>

 	<servlet>
		<description>XMS Keep Alive Monitor</description>
		<display-name>KeepAliveMonitor</display-name>
		<servlet-name>DlgcMsMonitorServlet</servlet-name>
		<servlet-class>com.vendor.dialogic.javax.media.mscontrol.sip.DlgcMsMonitorServlet
		</servlet-class>
		<load-on-startup>3</load-on-startup>
	</servlet>
	<listener>
		<listener-class>
			com.vendor.dialogic.javax.media.mscontrol.sip.DlgcMsMonitorServlet
		</listener-class>
	</listener> 


	<servlet>
		<description>Component receiving SIP request and response from XMS
		</description>
		<display-name>DlgcSipServlet</display-name>
		<servlet-name>DlgcSipServlet</servlet-name>
		<servlet-class>com.vendor.dialogic.javax.media.mscontrol.sip.DlgcSipServlet
		</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>
	<listener>
		<listener-class>
			com.vendor.dialogic.javax.media.mscontrol.sip.DlgcSipServlet
		</listener-class>
	</listener>


	<servlet>
		<servlet-name>SipAppP2PServlet</servlet-name>
		<display-name>SipAppP2PServlet</display-name>
		<description>SipAppP2PServlet</description>
		<servlet-class>
			com.zczg.app.MyTestApp
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<listener>
		<listener-class>
			com.zczg.app.MyTestApp
		</listener-class>
	</listener>


<!-- 	<servlet>
		<servlet-name>ThirdController</servlet-name>
		<display-name>ThirdController</display-name>
		<description>ThirdController</description>
		<servlet-class>
			com.zczg.app.ThirdController
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<listener>
		<listener-class>
			com.zczg.app.ThirdController
		</listener-class>
	</listener> -->


	<!-- <servlet> <description>DlgcPlayerTest</description> <display-name>DlgcPlayerTest</display-name> 
		<servlet-name>DlgcPlayerTest</servlet-name> <load-on-startup>1</load-on-startup> 
		<servlet-class>testing.unit.DlgcPlayerTest</servlet-class> </servlet> <listener> 
		<listener-class> testing.unit.DlgcPlayerTest </listener-class> </listener> -->

	<servlet-selection>
		<main-servlet>
			<!-- DlgcPlayerTest -->
			SipAppP2PServlet
		</main-servlet>
	</servlet-selection>

	<!-- <servlet> <description>Test for simple Signal Detector Prompt and collect</description> 
		<display-name>DlgcDtmfPromptCollectTest</display-name> <servlet-name>DlgcDtmfPromptCollectTest</servlet-name> 
		<load-on-startup>4</load-on-startup> <servlet-class>testing.unit.DlgcDtmfPromptCollectTest</servlet-class> 
		</servlet> <listener> <listener-class> testing.unit.DlgcDtmfPromptCollectTest 
		</listener-class> </listener> <servlet> <description>Test for simple Signal 
		Detector Dtmf Async test</description> <display-name>DlgcDtmfAsyncTest</display-name> 
		<servlet-name>DlgcDtmfAsyncTest</servlet-name> <load-on-startup>5</load-on-startup> 
		<servlet-class>testing.unit.DlgcDtmfAsyncTest</servlet-class> </servlet> 
		<listener> <listener-class> testing.unit.DlgcDtmfAsyncTest </listener-class> 
		</listener> <servlet> <description>Test for simple IVR Recorder </description> 
		<display-name>DlgcRecorderTest</display-name> <servlet-name>DlgcRecorderTest</servlet-name> 
		<load-on-startup>6</load-on-startup> <servlet-class>testing.unit.DlgcRecorderTest</servlet-class> 
		</servlet> <listener> <description>DlgcRecorderTest</description> <display-name>DlgcRecorderTest</display-name> 
		<listener-class>testing.unit.DlgcRecorderTest</listener-class> </listener> 
		<servlet> <description>Performance Play Test</description> <display-name>DlgcPlayerPerformanceTest</display-name> 
		<servlet-name>DlgcPlayerPerformanceTest</servlet-name> <load-on-startup>7</load-on-startup> 
		<servlet-class>testing.unit.DlgcPlayerPerformanceTest</servlet-class> </servlet> 
		<listener> <listener-class> testing.unit.DlgcPlayerPerformanceTest </listener-class> 
		</listener> <servlet> <description>Dialogic Test Conference Demo</description> 
		<display-name>JMCConferenceServlet</display-name> <servlet-name>JMCConferenceServlet</servlet-name> 
		<load-on-startup>8</load-on-startup> <servlet-class>testing.jmc_conference.JMCConferenceServlet</servlet-class> 
		</servlet> <listener> <listener-class> testing.jmc_conference.JMCConferenceServlet 
		</listener-class> </listener> <servlet> <description>Dialogic Bridge XMS 
		Conference Demo</description> <display-name>DlgcBridgeServlet</display-name> 
		<servlet-name>DlgcBridgeServlet</servlet-name> <load-on-startup>9</load-on-startup> 
		<servlet-class>testing.bridge_conference.DlgcBridgeServlet</servlet-class> 
		</servlet> <listener> <listener-class> testing.bridge_conference.DlgcBridgeServlet 
		</listener-class> </listener> <servlet> <description>Dialogic Early Media 
		Bridge XMS Conference Demo</description> <display-name>DlgcEMBridgeServlet</display-name> 
		<servlet-name>DlgcEMBridgeServlet</servlet-name> <load-on-startup>10</load-on-startup> 
		<servlet-class>testing.emedia_bridge_conference.DlgcEMBridgeServlet</servlet-class> 
		</servlet> <listener> <listener-class> testing.emedia_bridge_conference.DlgcEMBridgeServlet 
		</listener-class> </listener> <servlet> <description>Dialogic Reference Set 
		layout Conference Demo With Outbound Call</description> <display-name>DlgcReferenceConferenceWithOutBCallServlet</display-name> 
		<servlet-name>DlgcReferenceConferenceWithOutBCallServlet</servlet-name> <load-on-startup>11</load-on-startup> 
		<servlet-class>testing.reference_conf_demo_with_outb_call_layout.DlgcReferenceConferenceWithOutBCallServlet</servlet-class> 
		</servlet> <listener> <listener-class> testing.reference_conf_demo_with_outb_call_layout.DlgcReferenceConferenceWithOutBCallServlet 
		</listener-class> </listener> -->


	<!-- <servlet-selection> -->

	<!-- <servlet-mapping> <servlet-name>DlgcMsMonitorServlet</servlet-name> 
		<pattern> <and> <equal> <var>request.method</var> <value>INVITE</value> </equal> 
		<equal> <var>request.to.uri.user</var> <value></value> </equal> </and> </pattern> 
		</servlet-mapping> <servlet-mapping> <servlet-name>DlgcSipServlet</servlet-name> 
		<pattern> <and> <equal> <var>request.method</var> <value>INVITE</value> </equal> 
		<equal> <var>request.to.uri.user</var> <value></value> </equal> </and> </pattern> 
		</servlet-mapping> -->

	<!-- <servlet-mapping> <servlet-name>DlgcPlayerTest</servlet-name> <pattern> 
		<and> <equal> <var>request.method</var> <value>INVITE</value> </equal> <equal> 
		<var>request.to.uri.user</var> <value>DlgcPlayerDemo</value> </equal> </and> 
		</pattern> </servlet-mapping> -->

	<!-- <servlet-mapping> <servlet-name>DlgcDtmfPromptCollectTest</servlet-name> 
		<pattern> <and> <equal> <var>request.method</var> <value>INVITE</value> </equal> 
		<equal> <var>request.to.uri.user</var> <value>DlgcPromptCollectDemo</value> 
		</equal> </and> </pattern> </servlet-mapping> <servlet-mapping> <servlet-name>DlgcRecorderTest</servlet-name> 
		<pattern> <and> <equal> <var>request.method</var> <value>INVITE</value> </equal> 
		<equal> <var>request.to.uri.user</var> <value>DlgcRecorderDemo</value> </equal> 
		</and> </pattern> </servlet-mapping> <servlet-mapping> <servlet-name>DlgcDtmfAsyncTest</servlet-name> 
		<pattern> <and> <equal> <var>request.method</var> <value>INVITE</value> </equal> 
		<equal> <var>request.to.uri.user</var> <value>DlgcAsyncDtmfDemo</value> </equal> 
		</and> </pattern> </servlet-mapping> <servlet-mapping> <servlet-name>DlgcDriverSample</servlet-name> 
		<pattern> <and> <equal> <var>request.method</var> <value>INVITE</value> </equal> 
		<equal> <var>request.to.uri.user</var> <value>driver</value> </equal> </and> 
		</pattern> </servlet-mapping> <servlet-mapping> <servlet-name>DlgcPlayerPerformanceTest</servlet-name> 
		<pattern> <and> <equal> <var>request.method</var> <value>INVITE</value> </equal> 
		<equal> <var>request.to.uri.user</var> <value>pp</value> </equal> </and> 
		</pattern> </servlet-mapping> <servlet-mapping> <servlet-name>JMCConferenceServlet</servlet-name> 
		<pattern> <and> <equal> <var>request.method</var> <value>INVITE</value> </equal> 
		<equal> <var>request.to.uri.user</var> <value>DlgcMultiConferenceDemo</value> 
		</equal> </and> </pattern> </servlet-mapping> <servlet-mapping> <servlet-name>DlgcBridgeServlet</servlet-name> 
		<pattern> <and> <equal> <var>request.method</var> <value>INVITE</value> </equal> 
		<equal> <var>request.to.uri.user</var> <value>DlgcBridgeDemo</value> </equal> 
		</and> </pattern> </servlet-mapping> <servlet-mapping> <servlet-name>DlgcEMBridgeServlet</servlet-name> 
		<pattern> <and> <equal> <var>request.method</var> <value>INVITE</value> </equal> 
		<equal> <var>request.to.uri.user</var> <value>DlgcEarlyMediaBridgeDemo</value> 
		</equal> </and> </pattern> </servlet-mapping> <servlet-mapping> <servlet-name>DlgcReferenceConferenceWithOutBCallServlet</servlet-name> 
		<pattern> <and> <equal> <var>request.method</var> <value>INVITE</value> </equal> 
		<equal> <var>request.to.uri.user</var> <value>DlgcAvLayoutConferenceDemo</value> 
		</equal> </and> </pattern> </servlet-mapping> -->

	<!-- </servlet-selection> -->
</sip-app>


