package testing.timer_demo;

import java.io.Serializable;

import javax.servlet.ServletConfig;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.sip.ServletTimer;
import javax.servlet.sip.SipApplicationSession;
import javax.servlet.sip.SipFactory;
import javax.servlet.sip.SipServletContextEvent;
import javax.servlet.sip.TimerService;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.vendor.dialogic.javax.media.mscontrol.sip.DlgcMsMonitorServlet;

public class DlgcConnectorDependentTimerServlet extends DlgcMsMonitorServlet implements Serializable{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private static Logger log = LoggerFactory.getLogger(DlgcConnectorDependentTimerServlet.class);
	public static TimerService msTimerService;
	private static int counter = 0;
	private int timerInterval = 10000;
	public String timerId = null;
	SipApplicationSession  sas =null;

	@Override
	public void timeout(ServletTimer timer) {
		// TODO Auto-generated method stub
		final String timerID = timer.getId();	
		
		log.debug("timeout:Timer id:::" + timerID+"----"+timer.getInfo());
		log.debug("Enter DlgcConnectorDependentTimerServlet:timeout() generated by timerID: " + timerID );
		if(!timer.getInfo().toString().contains("timer_demo")){
			log.debug("Leaving DlgcConnectorDependentTimerServlet timeout method");
			super.timeout(timer);
		}
		else{
			
				startTimer();
				
		}
		
	}

	@Override
	public void init(ServletConfig cfg) throws ServletException
	{
		super.init(cfg);
		log.debug("Leaving DlgcConnectorDependentTimerServlet::init");
	}
	@Override
	public void servletInitialized(SipServletContextEvent arg0) {
		// TODO Auto-generated method stub
		log.debug("Entering DlgcConnectorDependentTimerServlet::servletInitialized");
		log.debug("DlgcConnectorDependentTimerServlet::servletInitialized servletName: " + arg0.getSipServlet().getServletName());
		super.servletInitialized(arg0);
		createSipApplicationSession();
		msTimerService = (TimerService) getServletContext().getAttribute(TIMER_SERVICE);
		startTimer();

	}
	public void startTimer()
	{
		log.debug("DlgcConnectorDependentTimerServlet::start()::counter: " + counter);
		try{
			String name = "timer_demo"+counter;
			//SipApplicationSession  sas = createSipApplicationSession();
			//ServletTimer ts = DlgcMsMonitorServlet.getTimerService().createTimer(sas, this.timerInterval, false, name);
			ServletTimer ts = msTimerService.createTimer(sas, this.timerInterval, false, name);
			this.timerId = ts.getId();
			log.debug("Start:Timer id:::" + this.timerId+"----"+ts.getInfo());
		}
		catch(Exception e){
			e.printStackTrace();
			log.error("Exception in start: " + e);
		}


	}
	public SipApplicationSession createSipApplicationSession(){
		ServletContext ctx = this.getServletContext();
		SipFactory factory = (SipFactory) ctx.getAttribute(SIP_FACTORY);
		sas = factory.createApplicationSession();
		return sas;
	}
}
